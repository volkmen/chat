name: Deploy to Amazon ECS

on:
  push:
    branches:
      - aws-test

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  login-to-amazon-ecr:
    name: login-aws
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::017820662130:role/GITHUB_WORKFLOW
          aws-region: ${{ vars.AWS_REGION }}
          role-session-name: github-verify-connection

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          IMAGE_TAG=latest
          ECR_REGISTRY=${{ vars.ECR_REGISTRY }}
          ECR_REPOSITORY=${{ vars.ECR_REPOSITORY }}
          
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push Docker image to Amazon ECR
        run: |
          IMAGE_TAG=latest
          ECR_REGISTRY=${{ vars.ECR_REGISTRY }}
          ECR_REPOSITORY=${{ vars.ECR_REPOSITORY }}
          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ vars.ECS_CLUSTER }}
          service: backend-service
          image: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/my-app:${{ github.sha }}
