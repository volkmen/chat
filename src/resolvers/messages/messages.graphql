type Message {
    id: ID!
    content: String!
    isRead: Boolean!
    createdAt: String!
    updatedAt: String!
    senderId: ID!
}

type PaginatedMessaged {
    page: Int!
    size: Int!
    total: Int!
    data: [Message!]!
}

type Query {
    GetMessage(messageId: ID!): Message
    GetMessages(chatId: ID!, page: Int, size: Int): PaginatedMessaged!
}

type Mutation {
    AddMessage(chatId: ID!, content: String!): Message
    UpdateMessage(msgId: ID!): Message!
    DeleteMessage(id: ID!): ID!
    ReadMessage(id: ID!): ID!
}

type Subscription {
    MessageReceived(chatId: ID!): Message!
    MessageIsRead: Message!
}
