type MessageUploadType {
    id: ID!
    url: String
    contentType: String
    fileName: String
    size: Int
}

input MessageUpload {
    url: String
    contentType: String
    fileName: String
    size: Int
}

type Message {
    id: ID!
    content: String!
    isRead: Boolean!
    createdAt: String!
    updatedAt: String!
    owner: User
    uploads: [MessageUploadType]
}

type PaginatedMessages {
    page: Int!
    size: Int!
    total: Int!
    data: [Message!]!
}

type Query {
    GetMessage(messageId: ID!): Message
    GetMessages(chatId: ID!, page: Int, size: Int): PaginatedMessages!
    GetS3PutObjectUrl(type:String): String!
}

type Mutation {
    AddMessage(chatId: ID!, content: String!, uploads: [MessageUpload]): Message
    UpdateMessage(msgId: ID!): Message!
    DeleteMessage(id: ID!): ID!
    ReadMessage(id: ID!): ID!
}

type Subscription {
    MessageReceived(chatId: ID!): Message!
    MessageIsRead: Message!
}
